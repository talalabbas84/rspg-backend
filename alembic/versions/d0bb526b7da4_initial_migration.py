"""Initial migration

Revision ID: d0bb526b7da4
Revises: 1e8d6fc809ac
Create Date: 2025-06-21 16:13:29.972391

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd0bb526b7da4'
down_revision: Union[str, Sequence[str], None] = '1e8d6fc809ac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_full_name'), 'users', ['full_name'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('global_lists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'user_id', name='_user_globallist_name_uc')
    )
    op.create_index(op.f('ix_global_lists_id'), 'global_lists', ['id'], unique=False)
    op.create_table('sequences',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('default_llm_model', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sequences_id'), 'sequences', ['id'], unique=False)
    op.create_index(op.f('ix_sequences_name'), 'sequences', ['name'], unique=False)
    op.create_table('blocks',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('STANDARD', 'DISCRETIZATION', 'SINGLE_LIST', 'MULTI_LIST', name='blocktypeenum'), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('sequence_id', sa.Integer(), nullable=False),
    sa.Column('config_json', sa.JSON(), nullable=False),
    sa.Column('llm_model_override', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sequence_id'], ['sequences.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blocks_id'), 'blocks', ['id'], unique=False)
    op.create_table('global_list_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('global_list_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['global_list_id'], ['global_lists.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_global_list_items_id'), 'global_list_items', ['id'], unique=False)
    op.create_table('runs',
    sa.Column('sequence_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', name='runstatusenum'), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('input_overrides_json', sa.JSON(), nullable=True),
    sa.Column('results_summary_json', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('llm_model_override', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sequence_id'], ['sequences.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_runs_id'), 'runs', ['id'], unique=False)
    op.create_table('variables',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('GLOBAL', 'INPUT', name='variabletypeenum'), nullable=False),
    sa.Column('sequence_id', sa.Integer(), nullable=False),
    sa.Column('value_json', sa.JSON(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sequence_id'], ['sequences.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'sequence_id', name='_sequence_variable_name_uc')
    )
    op.create_index(op.f('ix_variables_id'), 'variables', ['id'], unique=False)
    op.create_table('block_runs',
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('block_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', name='runstatusenum'), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('block_name_snapshot', sa.String(), nullable=True),
    sa.Column('block_type_snapshot', sa.Enum('STANDARD', 'DISCRETIZATION', 'SINGLE_LIST', 'MULTI_LIST', name='blocktypeenum'), nullable=True),
    sa.Column('prompt_text', sa.Text(), nullable=True),
    sa.Column('llm_output_text', sa.Text(), nullable=True),
    sa.Column('named_outputs_json', sa.JSON(), nullable=True),
    sa.Column('list_outputs_json', sa.JSON(), nullable=True),
    sa.Column('matrix_outputs_json', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['block_id'], ['blocks.id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_block_runs_id'), 'block_runs', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_block_runs_id'), table_name='block_runs')
    op.drop_table('block_runs')
    op.drop_index(op.f('ix_variables_id'), table_name='variables')
    op.drop_table('variables')
    op.drop_index(op.f('ix_runs_id'), table_name='runs')
    op.drop_table('runs')
    op.drop_index(op.f('ix_global_list_items_id'), table_name='global_list_items')
    op.drop_table('global_list_items')
    op.drop_index(op.f('ix_blocks_id'), table_name='blocks')
    op.drop_table('blocks')
    op.drop_index(op.f('ix_sequences_name'), table_name='sequences')
    op.drop_index(op.f('ix_sequences_id'), table_name='sequences')
    op.drop_table('sequences')
    op.drop_index(op.f('ix_global_lists_id'), table_name='global_lists')
    op.drop_table('global_lists')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_full_name'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
